module Net
  class IMAP < Net::Protocol
    include OpenSSL::SSL

    include OpenSSL

    include MonitorMixin

    extend Net::IMAP::Authenticators

    def self.debug: () -> untyped

    def self.debug=: (untyped val) -> untyped

    def self.decode_utf7: (untyped s) -> untyped

    alias self.default_imap_port self.default_port

    alias self.default_imaps_port self.default_tls_port

    def self.default_port: () -> untyped

    alias self.default_ssl_port self.default_tls_port

    def self.default_tls_port: () -> untyped

    def self.encode_utf7: (untyped s) -> untyped

    def self.format_date: (untyped time) -> untyped

    def self.format_datetime: (untyped time) -> untyped

    public

    def add_response_handler: (?untyped handler) { (*untyped) -> untyped } -> untyped

    def append: (untyped mailbox, untyped message, ?untyped flags, ?untyped date_time) -> untyped

    def authenticate: (untyped auth_type, *untyped args) -> untyped

    def capability: () -> untyped

    def check: () -> untyped

    def client_thread: () -> untyped

    def client_thread=: (untyped) -> untyped

    def close: () -> untyped

    def copy: (untyped set, untyped mailbox) -> untyped

    def create: (untyped mailbox) -> untyped

    def delete: (untyped mailbox) -> untyped

    def disconnect: () -> untyped

    def disconnected?: () -> untyped

    def examine: (untyped mailbox) -> untyped

    def expunge: () -> untyped

    def fetch: (untyped set, untyped attr, ?untyped mod) -> untyped

    def getacl: (untyped mailbox) -> untyped

    def getquota: (untyped mailbox) -> untyped

    def getquotaroot: (untyped mailbox) -> untyped

    def greeting: () -> untyped

    def id: (?untyped client_id) -> untyped

    def idle: (?untyped timeout) { (*untyped) -> untyped } -> untyped

    def idle_done: () -> untyped

    def idle_response_timeout: () -> untyped

    def list: (untyped refname, untyped mailbox) -> untyped

    def login: (untyped user, untyped password) -> untyped

    def logout: () -> untyped

    def lsub: (untyped refname, untyped mailbox) -> untyped

    def move: (untyped set, untyped mailbox) -> untyped

    def namespace: () -> untyped

    def noop: () -> untyped

    def open_timeout: () -> untyped

    def remove_response_handler: (untyped handler) -> untyped

    def rename: (untyped mailbox, untyped newname) -> untyped

    def response_handlers: () -> untyped

    def responses: () -> untyped

    def search: (untyped keys, ?untyped charset) -> untyped

    def select: (untyped mailbox) -> untyped

    def setacl: (untyped mailbox, untyped user, untyped rights) -> untyped

    def setquota: (untyped mailbox, untyped quota) -> untyped

    def sort: (untyped sort_keys, untyped search_keys, untyped charset) -> untyped

    def starttls: (?untyped options, ?untyped verify) -> untyped

    def status: (untyped mailbox, untyped attr) -> untyped

    def store: (untyped set, untyped attr, untyped flags) -> untyped

    def subscribe: (untyped mailbox) -> untyped

    def thread: (untyped algorithm, untyped search_keys, untyped charset) -> untyped

    def uid_copy: (untyped set, untyped mailbox) -> untyped

    def uid_fetch: (untyped set, untyped attr, ?untyped mod) -> untyped

    def uid_move: (untyped set, untyped mailbox) -> untyped

    def uid_search: (untyped keys, ?untyped charset) -> untyped

    def uid_sort: (untyped sort_keys, untyped search_keys, untyped charset) -> untyped

    def uid_store: (untyped set, untyped attr, untyped flags) -> untyped

    def uid_thread: (untyped algorithm, untyped search_keys, untyped charset) -> untyped

    def unsubscribe: (untyped mailbox) -> untyped

    def xlist: (untyped refname, untyped mailbox) -> untyped

    private

    def copy_internal: (untyped cmd, untyped set, untyped mailbox) -> untyped

    def create_ssl_params: (?untyped certs, ?untyped verify) -> untyped

    def fetch_internal: (untyped cmd, untyped set, untyped attr, ?untyped mod) -> untyped

    def generate_tag: () -> untyped

    def get_response: () -> untyped

    def get_tagged_response: (untyped tag, untyped cmd, ?untyped timeout) -> untyped

    def initialize: (untyped host, ?untyped port_or_options, ?untyped usessl, ?untyped certs, ?untyped verify) -> void

    def normalize_searching_criteria: (untyped keys) -> untyped

    def put_string: (untyped str) -> untyped

    def receive_responses: () -> untyped

    def record_response: (untyped name, untyped data) -> untyped

    def search_internal: (untyped cmd, untyped keys, untyped charset) -> untyped

    def send_command: (untyped cmd, *untyped args) { (*untyped) -> untyped } -> untyped

    def send_data: (untyped data, ?untyped tag) -> untyped

    def send_list_data: (untyped list, ?untyped tag) -> untyped

    def send_literal: (untyped str, ?untyped tag) -> untyped

    def send_number_data: (untyped num) -> untyped

    def send_quoted_string: (untyped str) -> untyped

    def send_string_data: (untyped str, ?untyped tag) -> untyped

    def send_symbol_data: (untyped symbol) -> untyped

    def send_time_data: (untyped time) -> untyped

    def sort_internal: (untyped cmd, untyped sort_keys, untyped search_keys, untyped charset) -> untyped

    def start_tls_session: (?untyped params) -> untyped

    def store_internal: (untyped cmd, untyped set, untyped attr, untyped flags) -> untyped

    def tcp_socket: (untyped host, untyped port) -> untyped

    def thread_internal: (untyped cmd, untyped algorithm, untyped search_keys, untyped charset) -> untyped

    def validate_data: (untyped data) -> untyped

    ALL: Symbol

    ANSWERED: Symbol

    ARCHIVE: Symbol

    CRLF: String

    DATE_MONTH: Array[untyped]

    DELETED: Symbol

    DRAFT: Symbol

    DRAFTS: Symbol

    FLAGGED: Symbol

    HAS_CHILDREN: Symbol

    HAS_NO_CHILDREN: Symbol

    JUNK: Symbol

    MARKED: Symbol

    NOINFERIORS: Symbol

    NONEXISTENT: Symbol

    NOSELECT: Symbol

    PORT: Integer

    RECENT: Symbol

    REMOTE: Symbol

    RESPONSE_ERRORS: Hash[untyped, untyped]

    SEEN: Symbol

    SENT: Symbol

    SSL_PORT: Integer

    SUBSCRIBED: Symbol

    TRASH: Symbol

    UNMARKED: Symbol

    VERSION: String
  end

  module IMAP
    class Address
    end

    class Atom
      public

      def send_data: (untyped imap, untyped tag) -> untyped

      def validate: () -> untyped

      private

      def initialize: (untyped data) -> void
    end

    module Authenticators
      public

      def add_authenticator: (untyped auth_type, untyped authenticator) -> untyped

      def authenticator: (untyped auth_type, *untyped args) -> untyped

      private

      def authenticators: () -> untyped
    end

    class BadResponseError < Net::IMAP::ResponseError
    end

    class BodyTypeAttachment
      public

      def multipart?: () -> untyped
    end

    class BodyTypeBasic
      public

      def media_subtype: () -> untyped

      def multipart?: () -> untyped
    end

    class BodyTypeExtension
      public

      def multipart?: () -> untyped
    end

    class BodyTypeMessage
      public

      def media_subtype: () -> untyped

      def multipart?: () -> untyped
    end

    class BodyTypeMultipart
      public

      def media_subtype: () -> untyped

      def multipart?: () -> untyped
    end

    class BodyTypeText
      public

      def media_subtype: () -> untyped

      def multipart?: () -> untyped
    end

    class ByeResponseError < Net::IMAP::ResponseError
    end

    class ClientID
      public

      def send_data: (untyped imap, untyped tag) -> untyped

      def validate: () -> untyped

      private

      def format_internal: (untyped client_id) -> untyped

      def initialize: (untyped data) -> void

      def validate_internal: (untyped client_id) -> untyped
    end

    class ContentDisposition
    end

    class ContinuationRequest
    end

    class CramMD5Authenticator
      public

      def process: (untyped challenge) -> untyped

      private

      def hmac_md5: (untyped text, untyped key) -> untyped

      def initialize: (untyped user, untyped password) -> void
    end

    class DataFormatError < Net::IMAP::Error
    end

    class DigestMD5Authenticator
      public

      def process: (untyped challenge) -> untyped

      private

      def initialize: (untyped user, untyped password, ?untyped authname) -> void

      def nc: (untyped nonce) -> untyped

      def qdval: (untyped k, untyped v) -> untyped

      STAGE_ONE: Symbol

      STAGE_TWO: Symbol
    end

    class Envelope
    end

    class Error < StandardError
    end

    class FetchData
    end

    class IgnoredResponse
    end

    class Literal
      public

      def send_data: (untyped imap, untyped tag) -> untyped

      def validate: () -> untyped

      private

      def initialize: (untyped data) -> void
    end

    class LoginAuthenticator
      public

      def process: (untyped data) -> untyped

      private

      def initialize: (untyped user, untyped password) -> void

      STATE_PASSWORD: Symbol

      STATE_USER: Symbol
    end

    class MailboxACLItem
    end

    class MailboxList
    end

    class MailboxQuota
    end

    class MailboxQuotaRoot
    end

    class MessageSet
      public

      def send_data: (untyped imap, untyped tag) -> untyped

      def validate: () -> untyped

      private

      def format_internal: (untyped data) -> untyped

      def initialize: (untyped data) -> void

      def validate_internal: (untyped data) -> untyped
    end

    class Namespace
    end

    class Namespaces
    end

    class NoResponseError < Net::IMAP::ResponseError
    end

    module NumValidator
      def self.ensure_mod_sequence_value: (untyped num) -> untyped

      def self.ensure_number: (untyped num) -> untyped

      def self.ensure_nz_number: (untyped num) -> untyped

      def self.valid_mod_sequence_value?: (untyped num) -> untyped

      def self.valid_number?: (untyped num) -> untyped

      def self.valid_nz_number?: (untyped num) -> untyped

      private

      def ensure_mod_sequence_value: (untyped num) -> untyped

      def ensure_number: (untyped num) -> untyped

      def ensure_nz_number: (untyped num) -> untyped

      def valid_mod_sequence_value?: (untyped num) -> untyped

      def valid_number?: (untyped num) -> untyped

      def valid_nz_number?: (untyped num) -> untyped
    end

    class PlainAuthenticator
      public

      def process: (untyped data) -> untyped

      private

      def initialize: (untyped username, untyped password, ?authzid: untyped) -> void

      NULL: String
    end

    class QuotedString
      public

      def send_data: (untyped imap, untyped tag) -> untyped

      def validate: () -> untyped

      private

      def initialize: (untyped data) -> void
    end

    class RawData
      public

      def send_data: (untyped imap, untyped tag) -> untyped

      def validate: () -> untyped

      private

      def initialize: (untyped data) -> void
    end

    class ResponseCode
    end

    class ResponseError < Net::IMAP::Error
      public

      def response: () -> untyped

      def response=: (untyped) -> untyped

      private

      def initialize: (untyped response) -> void
    end

    class ResponseParseError < Net::IMAP::Error
    end

    class ResponseParser
      public

      def parse: (untyped str) -> untyped

      private

      def accept: (*untyped args) -> untyped

      def accept_space: () -> untyped

      def accept_spaces: () -> untyped

      def address: () -> untyped

      def address_list: () -> untyped

      def astring: () -> untyped

      def astring_chars: () -> untyped

      def atom: () -> untyped

      def body: () -> untyped

      def body_data: () -> untyped

      def body_ext_1part: () -> untyped

      def body_ext_mpart: () -> untyped

      def body_extension: () -> untyped

      def body_extensions: () -> untyped

      def body_fields: () -> untyped

      def body_fld_dsp: () -> untyped

      def body_fld_lang: () -> untyped

      def body_fld_param: () -> untyped

      def body_type_1part: () -> untyped

      def body_type_attachment: () -> untyped

      def body_type_basic: () -> untyped

      def body_type_mixed: () -> untyped

      def body_type_mpart: () -> untyped

      def body_type_msg: () -> untyped

      def body_type_text: () -> untyped

      def capability_data: () -> untyped

      def capability_response: () -> untyped

      def case_insensitive_string: () -> untyped

      def charset: () -> untyped

      def charset_list: () -> untyped

      def combine_adjacent: (*untyped tokens) -> untyped

      def continue_req: () -> untyped

      def envelope: () -> untyped

      def envelope_data: () -> untyped

      def flag_list: () -> untyped

      def flags_data: () -> untyped

      def flags_response: () -> untyped

      def format_string: (untyped str) -> untyped

      def getacl_response: () -> untyped

      def getquota_response: () -> untyped

      def getquotaroot_response: () -> untyped

      def id_response: () -> untyped

      def ignored_response: () -> untyped

      def initialize: () -> void

      def internaldate_data: () -> untyped

      def list_response: () -> untyped

      def lookahead: () -> untyped

      def mailbox_list: () -> untyped

      def match: (*untyped args, ?lex_state: untyped) -> untyped

      def media_type: () -> untyped

      def modseq_data: () -> untyped

      def msg_att: (untyped n) -> untyped

      def namespace: () -> untyped

      def namespace_response: () -> untyped

      def namespace_response_extensions: () -> untyped

      def namespaces: () -> untyped

      def next_token: () -> untyped

      def nil_atom: () -> untyped

      def nstring: () -> untyped

      def number: () -> untyped

      def numeric_response: () -> untyped

      def parse_error: (untyped fmt, *untyped args) -> untyped

      def resp_text: () -> untyped

      def resp_text_code: () -> untyped

      def response: () -> untyped

      def response_cond: () -> untyped

      def response_tagged: () -> untyped

      def response_untagged: () -> untyped

      def rfc822_size: () -> untyped

      def rfc822_text: () -> untyped

      def search_response: () -> untyped

      def section: () -> untyped

      def shift_token: () -> untyped

      def status_response: () -> untyped

      def string: () -> untyped

      def string_token?: (untyped token) -> untyped

      def text: () -> untyped

      def text_response: () -> untyped

      def thread_branch: (untyped token) -> untyped

      def thread_response: () -> untyped

      def uid_data: () -> untyped

      ADDRESS_REGEXP: Regexp

      ASTRING_CHARS_TOKENS: Array[untyped]

      ATOM_TOKENS: Array[untyped]

      BEG_REGEXP: Regexp

      CTEXT_REGEXP: Regexp

      DATA_REGEXP: Regexp

      EXPR_BEG: Symbol

      EXPR_CTEXT: Symbol

      EXPR_DATA: Symbol

      EXPR_RTEXT: Symbol

      EXPR_TEXT: Symbol

      FLAG_REGEXP: Regexp

      RTEXT_REGEXP: Regexp

      SPACES_REGEXP: Regexp

      STRING_TOKENS: Array[untyped]

      TEXT_REGEXP: Regexp

      T_ATOM: Symbol

      T_BSLASH: Symbol

      T_CRLF: Symbol

      T_EOF: Symbol

      T_LBRA: Symbol

      T_LITERAL: Symbol

      T_LPAR: Symbol

      T_NIL: Symbol

      T_NUMBER: Symbol

      T_PERCENT: Symbol

      T_PLUS: Symbol

      T_QUOTED: Symbol

      T_RBRA: Symbol

      T_RPAR: Symbol

      T_SPACE: Symbol

      T_STAR: Symbol

      T_TEXT: Symbol
    end

    module ResponseParser
      class Token < Struct[untyped]
        def self.[]: (*untyped) -> untyped

        def self.inspect: () -> untyped

        def self.keyword_init?: () -> untyped

        def self.members: () -> untyped

        def self.new: (*untyped) -> untyped

        public

        def symbol: () -> untyped

        def symbol=: (untyped _) -> untyped

        def value: () -> untyped

        def value=: (untyped _) -> untyped
      end
    end

    class ResponseText
    end

    class StatusData
    end

    module StringFormatter
      def self.nstring: (untyped str) -> untyped

      def self.string: (untyped str) -> untyped

      def self.valid_nstring?: (untyped str) -> untyped

      def self.valid_string?: (untyped str) -> untyped

      private

      def nstring: (untyped str) -> untyped

      def string: (untyped str) -> untyped

      def valid_nstring?: (untyped str) -> untyped

      def valid_string?: (untyped str) -> untyped

      LITERAL_REGEX: Regexp
    end

    class TaggedResponse
    end

    class ThreadMember
    end

    class UnknownResponseError < Net::IMAP::ResponseError
    end

    class UntaggedResponse
    end
  end
end
