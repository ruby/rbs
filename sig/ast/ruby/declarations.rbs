module RBS
  module AST
    module Ruby
      module Declarations
        type t = ClassDecl | SingletonClassDecl | ModuleDecl | ConstantDecl | GlobalDecl | RBSDecl

        class Base
          attr_reader buffer: Buffer

          def initialize: (Buffer) -> void

          def constant_as_type_name: (Prism::node?) -> TypeName?

          def rbs_location: (Prism::Location) -> Location[bot, bot]
        end

        class ClassDecl < Base
          class Super
            attr_reader name: TypeName

            attr_reader args: Array[Types::t]

            attr_reader location: Location[bot, bot]?

            def initialize: (TypeName, Array[Types::t], Location[bot, bot]) -> void
          end

          type member = Members::t | t

          type super = [TypeName, Array[Types::t]]

          attr_reader node: Prism::ClassNode

          attr_reader members: Array[member]

          def initialize: (Buffer, Prism::ClassNode) -> void

          def type_params: () -> Array[AST::TypeParam]

          def super_class: () -> Super?

          def name: () -> TypeName

          def location: () -> Location[bot, bot]

          def each_member: () { (Members::t) -> void } -> void
                         | () -> Enumerator[Members::t]
        end

        class SingletonClassDecl < Base
          type member = Members::t | t

          attr_reader node: Prism::SingletonClassNode

          attr_reader members: Array[member]

          def initialize: (Prism::SingletonClassNode) -> void
        end

        class ModuleDecl < Base
          type member = Members::t | t

          attr_reader node: Prism::ModuleNode

          attr_reader members: Array[member]

          def initialize: (Buffer, Prism::ModuleNode) -> void

          def type_params: () -> Array[AST::TypeParam]

          def self_types: () -> Array[untyped]

          def name: () -> TypeName

          def location: () -> Location[untyped, untyped]

          def each_member: () { (Members::t) -> void } -> void
                         | () -> Enumerator[Members::t]
        end

        class ConstantDecl < Base
          attr_reader node: Prism::ConstantWriteNode

          def initialize: (Prism::ConstantWriteNode) -> void

          # Returns the type of the constant
          def type: () -> Types::t
        end

        class GlobalDecl < Base
          attr_reader node: Prism::GlobalVariableWriteNode
        end

        class RBSDecl < Base
        end
      end
    end
  end
end
